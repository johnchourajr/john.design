{"version":3,"sources":["../../../src/utils/worker/render-html.ts"],"names":["renderHTML","htmlComponentRendererPath","paths","stage","envVars","forEach","key","value","process","env","htmlComponentRenderer","require","Promise","map","path","resolve","reject","default","_throwAway","htmlString","fs","outputFile","cwd","e","context"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAGO,MAAMA,UAAU,GAAG,CAAC;AACzBC,EAAAA,yBADyB;AAEzBC,EAAAA,KAFyB;AAGzBC,EAAAA,KAHyB;AAIzBC,EAAAA;AAJyB,CAAD,KAUK;AAC7B;AACA;AACAA,EAAAA,OAAO,CAACC,OAAR,CAAgB,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAmBC,OAAO,CAACC,GAAR,CAAYH,GAAZ,IAAmBC,KAAtD;;AAEA,QAAMG,qBAAqB,GAAGC,OAAO,CAACV,yBAAD,CAArC;;AAEA,SAAOW,kBAAQC,GAAR,CACLX,KADK,EAELY,IAAI,IACF,IAAIF,iBAAJ,CAAY,CAACG,OAAD,EAAUC,MAAV,KAAqB;AAC/B,QAAI;AACFN,MAAAA,qBAAqB,CAACO,OAAtB,CAA8BH,IAA9B,EAAoC,CAACI,UAAD,EAAaC,UAAb,KAA4B;AAC9D,YAAIhB,KAAK,KAAM,cAAf,EAA8B;AAC5B,iBAAOY,OAAO,CAACI,UAAD,CAAd;AACD,SAFD,MAEO;AACL,iBAAOJ,OAAO,CACZK,iBAAGC,UAAH,CACE,mCAAoB,gBAAKb,OAAO,CAACc,GAAR,EAAL,EAAqB,QAArB,CAApB,EAAmDR,IAAnD,CADF,EAEEK,UAFF,CADY,CAAd;AAMD;AACF,OAXD;AAYD,KAbD,CAaE,OAAOI,CAAP,EAAU;AACV;AACAA,MAAAA,CAAC,CAACC,OAAF,GAAY;AACVV,QAAAA;AADU,OAAZ;AAGAE,MAAAA,MAAM,CAACO,CAAD,CAAN;AACD;AACF,GArBD,CAHG,CAAP;AA0BD,CA3CM","sourcesContent":["import fs from \"fs-extra\"\nimport Promise from \"bluebird\"\nimport { join } from \"path\"\nimport { getPageHtmlFilePath } from \"../../utils/page-html\"\nimport { Stage } from \"../../commands/types\"\n\nexport const renderHTML = ({\n  htmlComponentRendererPath,\n  paths,\n  stage,\n  envVars,\n}: {\n  htmlComponentRendererPath: string\n  paths: Array<string>\n  stage: Stage\n  envVars: Array<Array<string>>\n}): Promise<Array<unknown>> => {\n  // This is being executed in child process, so we need to set some vars\n  // for modules that aren't bundled by webpack.\n  envVars.forEach(([key, value]) => (process.env[key] = value))\n\n  const htmlComponentRenderer = require(htmlComponentRendererPath)\n\n  return Promise.map(\n    paths,\n    path =>\n      new Promise((resolve, reject) => {\n        try {\n          htmlComponentRenderer.default(path, (_throwAway, htmlString) => {\n            if (stage === `develop-html`) {\n              return resolve(htmlString)\n            } else {\n              return resolve(\n                fs.outputFile(\n                  getPageHtmlFilePath(join(process.cwd(), `public`), path),\n                  htmlString\n                )\n              )\n            }\n          })\n        } catch (e) {\n          // add some context to error so we can display more helpful message\n          e.context = {\n            path,\n          }\n          reject(e)\n        }\n      })\n  )\n}\n"],"file":"render-html.js"}