{"version":3,"sources":["../../src/utils/api-runner-node.js"],"names":["Promise","require","_","chalk","bindActionCreators","tracer","globalTracer","reporter","stackTrace","codeFrameColumns","fs","getCache","createContentDigest","emitter","store","getNodes","getNode","getNodesByType","hasNodeChanged","getNodeAndSavePathDependency","getPublicPath","getNonGatsbyCodeFrameFormatted","trackBuildError","decorateEvent","loadNodeContent","boundPluginActionCreators","doubleBind","boundActionCreators","api","plugin","actionOptions","traceId","deferNodeMutation","defer","actionKey","name","keys","Object","doubleBoundActionCreators","i","length","key","boundActionCreator","args","undefined","initAPICallTracing","parentSpan","startSpan","spanName","spanArgs","defaultSpanArgs","childOf","merge","deferredAction","type","resolve","emit","payload","NODE_MUTATION_ACTIONS","deferActions","actions","deferred","forEach","action","getLocalReporter","activity","panicOnBuild","bind","extendErrorIdWithPluginName","pluginName","errorMeta","id","isPrefixed","includes","getErrorMapWithPluginName","errorMap","entries","reduce","memo","val","extendLocalReporterToCatchPluginErrors","runningActivities","setErrorMap","error","panic","addPluginNameToErrorMeta","context","sourceMessage","errorMetaWithPluginName","activityTimer","apply","originalStart","start","originalEnd","end","add","delete","createProgress","originalDone","done","getUninitializedCache","message","get","Error","set","pluginNodeCache","Map","runAPI","gatsbyNode","spanOptions","pluginSpan","setTag","publicActions","restrictedActionsAvailableInAPI","availableActions","dispatch","config","program","getState","pathPrefix","prefixPaths","publicPath","namespacedCreateNodeId","tracing","cache","apiFinished","alreadyDisplayed","createPageAction","createPage","warning","stripIndent","bold","possiblyCodeFrame","push","warn","join","localReporter","Set","extendedLocalReporter","endInProgressActivitiesCreatedByThisRun","apiCallArgs","basePath","createNodeId","schema","buildObjectType","buildUnionType","buildInterfaceType","buildInputObjectType","buildEnumType","buildScalarType","pluginOptions","fromCallback","callback","cb","err","finish","e","version","apisRunningById","apisRunningByTraceId","waitingForCasacadeToFinish","module","exports","pluginSource","traceTags","waitForCascadingActions","apiSpanArgs","apiSpan","value","plugins","flattenedPlugins","implementingPlugins","filter","nodeAPIs","apiRunInstance","span","startTime","Date","toJSON","node","internal","contentDigest","filename","page","path","argsJson","JSON","stringify","omit","size","has","currentCount","stopQueuedApiRuns","onAPIRunComplete","actionHandler","on","off","apiRunPromiseOptions","runPromise","process","env","GATSBY_EXPERIMENTAL_PARALLEL_SOURCING","map","concurrency","mapSeries","unstable_shouldOnCreateNode","catch","file","parse","find","test","fileName","codeFrame","structuredError","lineNumber","line","columnNumber","column","code","readFileSync","encoding","highlightCode","_e","location","filePath","then","results","result","isEmpty","instance","apisByTraceIdCount"],"mappings":"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","sourcesContent":["const Promise = require(`bluebird`)\nconst _ = require(`lodash`)\nconst chalk = require(`chalk`)\nconst { bindActionCreators } = require(`redux`)\n\nconst tracer = require(`opentracing`).globalTracer()\nconst reporter = require(`gatsby-cli/lib/reporter`)\nconst stackTrace = require(`stack-trace`)\nconst { codeFrameColumns } = require(`@babel/code-frame`)\nconst fs = require(`fs-extra`)\nconst { getCache } = require(`./get-cache`)\nimport { createNodeId } from \"./create-node-id\"\nconst { createContentDigest } = require(`gatsby-core-utils`)\nimport {\n  buildObjectType,\n  buildUnionType,\n  buildInterfaceType,\n  buildInputObjectType,\n  buildEnumType,\n  buildScalarType,\n} from \"../schema/types/type-builders\"\nconst { emitter, store } = require(`../redux`)\nconst {\n  getNodes,\n  getNode,\n  getNodesByType,\n  hasNodeChanged,\n  getNodeAndSavePathDependency,\n} = require(`../redux/nodes`)\nconst { getPublicPath } = require(`./get-public-path`)\nconst { getNonGatsbyCodeFrameFormatted } = require(`./stack-trace-utils`)\nconst { trackBuildError, decorateEvent } = require(`gatsby-telemetry`)\nimport errorParser from \"./api-runner-error-parser\"\nconst { loadNodeContent } = require(`../db/nodes`)\n\n// Bind action creators per plugin so we can auto-add\n// metadata to actions they create.\nconst boundPluginActionCreators = {}\nconst doubleBind = (boundActionCreators, api, plugin, actionOptions) => {\n  const { traceId, deferNodeMutation } = actionOptions\n  const defer = deferNodeMutation ? `defer-node-mutation` : ``\n  const actionKey = plugin.name + api + traceId + defer\n  if (boundPluginActionCreators[actionKey]) {\n    return boundPluginActionCreators[actionKey]\n  } else {\n    const keys = Object.keys(boundActionCreators)\n    const doubleBoundActionCreators = {}\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n      const boundActionCreator = boundActionCreators[key]\n      if (typeof boundActionCreator === `function`) {\n        doubleBoundActionCreators[key] = (...args) => {\n          // Let action callers override who the plugin is. Shouldn't be\n          // used that often.\n          if (args.length === 1) {\n            return boundActionCreator(args[0], plugin, actionOptions)\n          } else if (args.length === 2) {\n            return boundActionCreator(args[0], args[1], actionOptions)\n          }\n          return undefined\n        }\n      }\n    }\n    boundPluginActionCreators[actionKey] = doubleBoundActionCreators\n    return doubleBoundActionCreators\n  }\n}\n\nconst initAPICallTracing = parentSpan => {\n  const startSpan = (spanName, spanArgs = {}) => {\n    const defaultSpanArgs = { childOf: parentSpan }\n\n    return tracer.startSpan(spanName, _.merge(defaultSpanArgs, spanArgs))\n  }\n\n  return {\n    tracer,\n    parentSpan,\n    startSpan,\n  }\n}\n\nconst deferredAction = type => (...args) => {\n  // Regular createNode returns a Promise, but when deferred we need\n  // to wrap it in another which we resolve when it's actually called\n  if (type === `createNode`) {\n    return new Promise(resolve => {\n      emitter.emit(`ENQUEUE_NODE_MUTATION`, {\n        type,\n        payload: args,\n        resolve,\n      })\n    })\n  }\n  return emitter.emit(`ENQUEUE_NODE_MUTATION`, {\n    type,\n    payload: args,\n  })\n}\n\nconst NODE_MUTATION_ACTIONS = [\n  `createNode`,\n  `deleteNode`,\n  `deleteNodes`,\n  `touchNode`,\n  `createParentChildLink`,\n  `createNodeField`,\n]\n\nconst deferActions = actions => {\n  const deferred = { ...actions }\n  NODE_MUTATION_ACTIONS.forEach(action => {\n    deferred[action] = deferredAction(action)\n  })\n  return deferred\n}\n\n/**\n * Create a local reporter\n * Used to override reporter methods with activity methods\n */\nfunction getLocalReporter({ activity, reporter }) {\n  // If we have an activity, bind panicOnBuild to the activities method to\n  // join them\n  if (activity) {\n    return { ...reporter, panicOnBuild: activity.panicOnBuild.bind(activity) }\n  }\n\n  return reporter\n}\n\nfunction extendErrorIdWithPluginName(pluginName, errorMeta) {\n  const id = errorMeta?.id\n  if (id) {\n    const isPrefixed = id.includes(`${pluginName}_`)\n    if (!isPrefixed) {\n      return {\n        ...errorMeta,\n        id: `${pluginName}_${id}`,\n      }\n    }\n  }\n\n  return errorMeta\n}\n\nfunction getErrorMapWithPluginName(pluginName, errorMap) {\n  const entries = Object.entries(errorMap)\n\n  return entries.reduce((memo, [key, val]) => {\n    memo[`${pluginName}_${key}`] = val\n\n    return memo\n  }, {})\n}\n\nfunction extendLocalReporterToCatchPluginErrors({\n  reporter,\n  pluginName,\n  runningActivities,\n}) {\n  let setErrorMap\n\n  let error = reporter.error\n  let panic = reporter.panic\n  let panicOnBuild = reporter.panicOnBuild\n\n  const addPluginNameToErrorMeta = (errorMeta, pluginName) =>\n    typeof errorMeta === `string`\n      ? {\n          context: {\n            sourceMessage: errorMeta,\n          },\n          pluginName,\n        }\n      : {\n          ...errorMeta,\n          pluginName,\n        }\n\n  if (pluginName && reporter?.setErrorMap) {\n    setErrorMap = errorMap =>\n      reporter.setErrorMap(getErrorMapWithPluginName(pluginName, errorMap))\n\n    error = (errorMeta, error) => {\n      const errorMetaWithPluginName = addPluginNameToErrorMeta(\n        errorMeta,\n        pluginName\n      )\n      reporter.error(\n        extendErrorIdWithPluginName(pluginName, errorMetaWithPluginName),\n        error\n      )\n    }\n\n    panic = (errorMeta, error) => {\n      const errorMetaWithPluginName = addPluginNameToErrorMeta(\n        errorMeta,\n        pluginName\n      )\n      reporter.panic(\n        extendErrorIdWithPluginName(pluginName, errorMetaWithPluginName),\n        error\n      )\n    }\n\n    panicOnBuild = (errorMeta, error) => {\n      const errorMetaWithPluginName = addPluginNameToErrorMeta(\n        errorMeta,\n        pluginName\n      )\n      reporter.panicOnBuild(\n        extendErrorIdWithPluginName(pluginName, errorMetaWithPluginName),\n        error\n      )\n    }\n  }\n\n  return {\n    ...reporter,\n    setErrorMap,\n    error,\n    panic,\n    panicOnBuild,\n    activityTimer: (...args) => {\n      const activity = reporter.activityTimer.apply(reporter, args)\n\n      const originalStart = activity.start\n      const originalEnd = activity.end\n\n      activity.start = () => {\n        originalStart.apply(activity)\n        runningActivities.add(activity)\n      }\n\n      activity.end = () => {\n        originalEnd.apply(activity)\n        runningActivities.delete(activity)\n      }\n\n      return activity\n    },\n\n    createProgress: (...args) => {\n      const activity = reporter.createProgress.apply(reporter, args)\n\n      const originalStart = activity.start\n      const originalEnd = activity.end\n      const originalDone = activity.done\n\n      activity.start = () => {\n        originalStart.apply(activity)\n        runningActivities.add(activity)\n      }\n\n      activity.end = () => {\n        originalEnd.apply(activity)\n        runningActivities.delete(activity)\n      }\n\n      activity.done = () => {\n        originalDone.apply(activity)\n        runningActivities.delete(activity)\n      }\n\n      return activity\n    },\n  }\n}\n\nconst getUninitializedCache = plugin => {\n  const message =\n    `Usage of \"cache\" instance in \"onPreInit\" API is not supported as ` +\n    `this API runs before cache initialization` +\n    (plugin && plugin !== `default-site-plugin` ? ` (called in ${plugin})` : ``)\n\n  return {\n    // GatsbyCache\n    async get() {\n      throw new Error(message)\n    },\n    async set() {\n      throw new Error(message)\n    },\n  }\n}\n\nconst pluginNodeCache = new Map()\n\nconst runAPI = async (plugin, api, args, activity) => {\n  let gatsbyNode = pluginNodeCache.get(plugin.name)\n  if (!gatsbyNode) {\n    gatsbyNode = require(`${plugin.resolve}/gatsby-node`)\n    pluginNodeCache.set(plugin.name, gatsbyNode)\n  }\n\n  if (gatsbyNode[api]) {\n    const parentSpan = args && args.parentSpan\n    const spanOptions = parentSpan ? { childOf: parentSpan } : {}\n    const pluginSpan = tracer.startSpan(`run-plugin`, spanOptions)\n\n    pluginSpan.setTag(`api`, api)\n    pluginSpan.setTag(`plugin`, plugin.name)\n\n    const {\n      publicActions,\n      restrictedActionsAvailableInAPI,\n    } = require(`../redux/actions`)\n    const availableActions = {\n      ...publicActions,\n      ...(restrictedActionsAvailableInAPI[api] || {}),\n    }\n    let boundActionCreators = bindActionCreators(\n      availableActions,\n      store.dispatch\n    )\n\n    if (args.deferNodeMutation) {\n      boundActionCreators = deferActions(boundActionCreators)\n    }\n\n    const doubleBoundActionCreators = doubleBind(\n      boundActionCreators,\n      api,\n      plugin,\n      { ...args, parentSpan: pluginSpan, activity }\n    )\n\n    const { config, program } = store.getState()\n\n    const pathPrefix = (program.prefixPaths && config.pathPrefix) || ``\n    const publicPath = getPublicPath({ ...config, ...program }, ``)\n\n    const namespacedCreateNodeId = id => createNodeId(id, plugin.name)\n\n    const tracing = initAPICallTracing(pluginSpan)\n\n    // See https://github.com/gatsbyjs/gatsby/issues/11369\n    const cache =\n      api === `onPreInit`\n        ? getUninitializedCache(plugin.name)\n        : getCache(plugin.name)\n\n    // Ideally this would be more abstracted and applied to more situations, but right now\n    // this can be potentially breaking so targeting `createPages` API and `createPage` action\n    let actions = doubleBoundActionCreators\n    let apiFinished = false\n    if (api === `createPages`) {\n      let alreadyDisplayed = false\n      const createPageAction = actions.createPage\n      // create new actions object with wrapped createPage action\n      // doubleBoundActionCreators is memoized, so we can't just\n      // reassign createPage field as this would cause this extra logic\n      // to be used in subsequent APIs and we only want to target this `createPages` call.\n      actions = {\n        ...actions,\n        createPage: (...args) => {\n          createPageAction(...args)\n          if (apiFinished && !alreadyDisplayed) {\n            const warning = [\n              reporter.stripIndent(`\n              Action ${chalk.bold(\n                `createPage`\n              )} was called outside of its expected asynchronous lifecycle ${chalk.bold(\n                `createPages`\n              )} in ${chalk.bold(plugin.name)}.\n              Ensure that you return a Promise from ${chalk.bold(\n                `createPages`\n              )} and are awaiting any asynchronous method invocations (like ${chalk.bold(\n                `graphql`\n              )} or http requests).\n              For more info and debugging tips: see ${chalk.bold(\n                `https://gatsby.dev/sync-actions`\n              )}\n            `),\n            ]\n\n            const possiblyCodeFrame = getNonGatsbyCodeFrameFormatted()\n            if (possiblyCodeFrame) {\n              warning.push(possiblyCodeFrame)\n            }\n\n            reporter.warn(warning.join(`\\n\\n`))\n            alreadyDisplayed = true\n          }\n        },\n      }\n    }\n\n    const localReporter = getLocalReporter({ activity, reporter })\n\n    const runningActivities = new Set()\n\n    const extendedLocalReporter = extendLocalReporterToCatchPluginErrors({\n      reporter: localReporter,\n      pluginName: plugin.name,\n      runningActivities,\n    })\n\n    const endInProgressActivitiesCreatedByThisRun = () => {\n      runningActivities.forEach(activity => activity.end())\n    }\n\n    const apiCallArgs = [\n      {\n        ...args,\n        basePath: pathPrefix,\n        pathPrefix: publicPath,\n        boundActionCreators: actions,\n        actions,\n        loadNodeContent,\n        store,\n        emitter,\n        getCache,\n        getNodes,\n        getNode,\n        getNodesByType,\n        hasNodeChanged,\n        reporter: extendedLocalReporter,\n        getNodeAndSavePathDependency,\n        cache,\n        createNodeId: namespacedCreateNodeId,\n        createContentDigest,\n        tracing,\n        schema: {\n          buildObjectType,\n          buildUnionType,\n          buildInterfaceType,\n          buildInputObjectType,\n          buildEnumType,\n          buildScalarType,\n        },\n      },\n      plugin.pluginOptions,\n    ]\n\n    // If the plugin is using a callback use that otherwise\n    // expect a Promise to be returned.\n    if (gatsbyNode[api].length === 3) {\n      return Promise.fromCallback(callback => {\n        const cb = (err, val) => {\n          pluginSpan.finish()\n          apiFinished = true\n          endInProgressActivitiesCreatedByThisRun()\n          callback(err, val)\n        }\n\n        try {\n          gatsbyNode[api](...apiCallArgs, cb)\n        } catch (e) {\n          trackBuildError(api, {\n            error: e,\n            pluginName: `${plugin.name}@${plugin.version}`,\n          })\n          throw e\n        }\n      })\n    } else {\n      try {\n        return await gatsbyNode[api](...apiCallArgs)\n      } finally {\n        pluginSpan.finish()\n        apiFinished = true\n        endInProgressActivitiesCreatedByThisRun()\n      }\n    }\n  }\n\n  return null\n}\n\nconst apisRunningById = new Map()\nconst apisRunningByTraceId = new Map()\nlet waitingForCasacadeToFinish = []\n\nmodule.exports = async (api, args = {}, { pluginSource, activity } = {}) =>\n  new Promise(resolve => {\n    const { parentSpan, traceId, traceTags, waitForCascadingActions } = args\n    const apiSpanArgs = parentSpan ? { childOf: parentSpan } : {}\n    const apiSpan = tracer.startSpan(`run-api`, apiSpanArgs)\n\n    apiSpan.setTag(`api`, api)\n    _.forEach(traceTags, (value, key) => {\n      apiSpan.setTag(key, value)\n    })\n\n    const plugins = store.getState().flattenedPlugins\n\n    // Get the list of plugins that implement this API.\n    // Also: Break infinite loops. Sometimes a plugin will implement an API and\n    // call an action which will trigger the same API being called.\n    // `onCreatePage` is the only example right now. In these cases, we should\n    // avoid calling the originating plugin again.\n    let implementingPlugins = plugins.filter(\n      plugin => plugin.nodeAPIs.includes(api) && plugin.name !== pluginSource\n    )\n\n    if (api === `sourceNodes` && args.pluginName) {\n      implementingPlugins = implementingPlugins.filter(\n        plugin => plugin.name === args.pluginName\n      )\n    }\n\n    const apiRunInstance = {\n      api,\n      args,\n      pluginSource,\n      resolve,\n      span: apiSpan,\n      startTime: new Date().toJSON(),\n      traceId,\n    }\n\n    // Generate IDs for api runs. Most IDs we generate from the args\n    // but some API calls can have very large argument objects so we\n    // have special ways of generating IDs for those to avoid stringifying\n    // large objects.\n    let id\n    if (api === `setFieldsOnGraphQLNodeType`) {\n      id = `${api}${apiRunInstance.startTime}${args.type.name}${traceId}`\n    } else if (api === `onCreateNode`) {\n      id = `${api}${apiRunInstance.startTime}${args.node.internal.contentDigest}${traceId}`\n    } else if (api === `preprocessSource`) {\n      id = `${api}${apiRunInstance.startTime}${args.filename}${traceId}`\n    } else if (api === `onCreatePage`) {\n      id = `${api}${apiRunInstance.startTime}${args.page.path}${traceId}`\n    } else {\n      // When tracing is turned on, the `args` object will have a\n      // `parentSpan` field that can be quite large. So we omit it\n      // before calling stringify\n      const argsJson = JSON.stringify(_.omit(args, `parentSpan`))\n      id = `${api}|${apiRunInstance.startTime}|${apiRunInstance.traceId}|${argsJson}`\n    }\n    apiRunInstance.id = id\n\n    if (waitForCascadingActions) {\n      waitingForCasacadeToFinish.push(apiRunInstance)\n    }\n\n    if (apisRunningById.size === 0) {\n      emitter.emit(`API_RUNNING_START`)\n    }\n\n    apisRunningById.set(apiRunInstance.id, apiRunInstance)\n    if (apisRunningByTraceId.has(apiRunInstance.traceId)) {\n      const currentCount = apisRunningByTraceId.get(apiRunInstance.traceId)\n      apisRunningByTraceId.set(apiRunInstance.traceId, currentCount + 1)\n    } else {\n      apisRunningByTraceId.set(apiRunInstance.traceId, 1)\n    }\n\n    let stopQueuedApiRuns = false\n    let onAPIRunComplete = null\n    if (api === `onCreatePage`) {\n      const path = args.page.path\n      const actionHandler = action => {\n        if (action.payload.path === path) {\n          stopQueuedApiRuns = true\n        }\n      }\n      emitter.on(`DELETE_PAGE`, actionHandler)\n      onAPIRunComplete = () => {\n        emitter.off(`DELETE_PAGE`, actionHandler)\n      }\n    }\n\n    let apiRunPromiseOptions = {}\n    let runPromise\n    if (\n      api === `sourceNodes` &&\n      process.env.GATSBY_EXPERIMENTAL_PARALLEL_SOURCING\n    ) {\n      runPromise = Promise.map\n      apiRunPromiseOptions.concurrency = 20\n    } else {\n      runPromise = Promise.mapSeries\n      apiRunPromiseOptions = undefined\n    }\n\n    runPromise(\n      implementingPlugins,\n      plugin => {\n        if (stopQueuedApiRuns) {\n          return null\n        }\n\n        let gatsbyNode = pluginNodeCache.get(plugin.name)\n        if (!gatsbyNode) {\n          gatsbyNode = require(`${plugin.resolve}/gatsby-node`)\n          pluginNodeCache.set(plugin.name, gatsbyNode)\n        }\n\n        const pluginName =\n          plugin.name === `default-site-plugin` ? `gatsby-node.js` : plugin.name\n\n        // TODO: rethink createNode API to handle this better\n        if (\n          api === `onCreateNode` &&\n          gatsbyNode?.unstable_shouldOnCreateNode && // Don't bail if this api is not exported\n          !gatsbyNode.unstable_shouldOnCreateNode(\n            { node: args.node },\n            plugin.pluginOptions\n          )\n        ) {\n          // Do not try to schedule an async event for this node for this plugin\n          return null\n        }\n\n        return new Promise(resolve => {\n          resolve(\n            runAPI(plugin, api, { ...args, parentSpan: apiSpan }, activity)\n          )\n        }).catch(err => {\n          decorateEvent(`BUILD_PANIC`, {\n            pluginName: `${plugin.name}@${plugin.version}`,\n          })\n\n          const localReporter = getLocalReporter({ activity, reporter })\n\n          const file = stackTrace\n            .parse(err)\n            .find(file => /gatsby-node/.test(file.fileName))\n\n          let codeFrame = ``\n          const structuredError = errorParser({ err })\n\n          if (file) {\n            const { fileName, lineNumber: line, columnNumber: column } = file\n\n            try {\n              const code = fs.readFileSync(fileName, { encoding: `utf-8` })\n              codeFrame = codeFrameColumns(\n                code,\n                {\n                  start: {\n                    line,\n                    column,\n                  },\n                },\n                {\n                  highlightCode: true,\n                }\n              )\n            } catch (_e) {\n              // sometimes stack trace point to not existing file\n              // particularly when file is transpiled and path actually changes\n              // (like pointing to not existing `src` dir or original typescript file)\n            }\n\n            structuredError.location = {\n              start: { line: line, column: column },\n            }\n            structuredError.filePath = fileName\n          }\n\n          structuredError.context = {\n            ...structuredError.context,\n            pluginName,\n            api,\n            codeFrame,\n          }\n\n          localReporter.panicOnBuild(structuredError)\n\n          return null\n        })\n      },\n      apiRunPromiseOptions\n    ).then(results => {\n      if (onAPIRunComplete) {\n        onAPIRunComplete()\n      }\n      // Remove runner instance\n      apisRunningById.delete(apiRunInstance.id)\n      const currentCount = apisRunningByTraceId.get(apiRunInstance.traceId)\n      apisRunningByTraceId.set(apiRunInstance.traceId, currentCount - 1)\n\n      if (apisRunningById.size === 0) {\n        emitter.emit(`API_RUNNING_QUEUE_EMPTY`)\n      }\n\n      // Filter empty results\n      apiRunInstance.results = results.filter(result => !_.isEmpty(result))\n\n      // Filter out empty responses and return if the\n      // api caller isn't waiting for cascading actions to finish.\n      if (!waitForCascadingActions) {\n        apiSpan.finish()\n        resolve(apiRunInstance.results)\n      }\n\n      // Check if any of our waiters are done.\n      waitingForCasacadeToFinish = waitingForCasacadeToFinish.filter(\n        instance => {\n          // If none of its trace IDs are running, it's done.\n          const apisByTraceIdCount = apisRunningByTraceId.get(instance.traceId)\n          if (apisByTraceIdCount === 0) {\n            instance.span.finish()\n            instance.resolve(instance.results)\n            return false\n          } else {\n            return true\n          }\n        }\n      )\n      return\n    })\n  })\n"],"file":"api-runner-node.js"}