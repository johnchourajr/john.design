{"version":3,"sources":["../../src/utils/get-react-hot-loader-strategy.ts"],"names":["getReactHotLoaderStrategy","process","env","GATSBY_HOT_LOADER","GATSBY_FAST_REFRESH"],"mappings":";;;;;AAAA;AAEA;AACA;AACA;AACO,SAASA,yBAAT,GAA6C;AAClD;AACA,MAAIC,OAAO,CAACC,GAAR,CAAYC,iBAAhB,EAAmC,OAAOF,OAAO,CAACC,GAAR,CAAYC,iBAAnB,CAFe,CAIlD;;AACA,MAAIF,OAAO,CAACC,GAAR,CAAYE,mBAAhB,EAAqC,OAAQ,cAAR,CALa,CAOlD;AACA;AAEA;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE,SAAQ,kBAAR;AACD","sourcesContent":["// import semver from \"semver\"\n\n// Fast refresh is supported as of React 16.9.\n// This package will do some sniffing to see if the current version of\n// React installed is greater than 17.0.\nexport function getReactHotLoaderStrategy(): string {\n  // If the user has defined this, we don't want to do any package sniffing\n  if (process.env.GATSBY_HOT_LOADER) return process.env.GATSBY_HOT_LOADER\n\n  // If the config flag is true, return fast-refresh\n  if (process.env.GATSBY_FAST_REFRESH) return `fast-refresh`\n\n  // Do some package sniffing to see if we can use fast-refresh if the user didn't\n  // specify a specific hot loader with the environment variable.\n\n  // TODO: Probably use the flags for this\n  /*\n  try {\n    const reactVersion = require(`react/package.json`).version\n\n    // TODO React components need to be named to make fast-refresh work\n    // We need to create an eslint-rule that shows this error or create a babel plugin\n    // that converts arrow functions to generated named ones.\n    // When it's available we can switch the condition to >=16.9.0\n    if (semver.satisfies(reactVersion, `>=17.0.0`)) {\n      return `fast-refresh`\n    }\n  } catch (e) {\n    return `react-hot-loader`\n  }\n  */\n\n  return `react-hot-loader`\n}\n"],"file":"get-react-hot-loader-strategy.js"}