import { Stats } from "webpack";
import { Stage as StageEnum } from "../commands/types";
declare const stageCodeToReadableLabel: {
    readonly BuildJavascript: "Generating JavaScript bundles";
    readonly BuildHTML: "Generating SSR bundle";
    readonly DevelopHTML: "Generating development SSR bundle";
    readonly Develop: "Generating development JavaScript bundle";
};
declare type Stage = keyof typeof StageEnum;
declare type StageLabel = typeof stageCodeToReadableLabel[Stage];
interface ITransformedWebpackError {
    id: string;
    filePath?: string;
    location?: {
        start: string;
    };
    context: {
        stage: StageEnum;
        stageLabel: StageLabel;
        sourceMessage?: string;
        [key: string]: unknown;
    };
}
export declare const structureWebpackErrors: (stage: StageEnum, webpackError: any) => Array<ITransformedWebpackError> | ITransformedWebpackError;
export declare const reportWebpackWarnings: (stats: Stats) => void;
export {};
