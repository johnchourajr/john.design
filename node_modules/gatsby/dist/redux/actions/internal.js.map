{"version":3,"sources":["../../../src/redux/actions/internal.ts"],"names":["createPageDependency","path","nodeId","connection","plugin","type","payload","deleteComponentsDependencies","paths","replaceComponentQuery","query","componentPath","apiFinished","replaceStaticQuery","args","queryExtracted","traceId","setGraphQLDefinitions","definitionsByName","queryExtractionGraphQLError","error","queryExtractedBabelSuccess","queryExtractionBabelError","setProgramStatus","status","pageQueryRun","isPage","queryStart","clearDirtyQueriesListToEmitViaWebsocket","removeStaleJob","contentDigest","setSiteConfig","config","result","gatsbyConfigSchema","validate","normalizedPayload","value","hasUnknownKeys","details","filter","Array","isArray","length","errorMessages","map","unknown","context","message","key","suggestion","reporter","panic","id","sourceMessage","join"],"mappings":"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","sourcesContent":["import reporter from \"gatsby-cli/lib/reporter\"\n\nimport {\n  IGatsbyConfig,\n  IGatsbyPlugin,\n  ProgramStatus,\n  ICreatePageDependencyAction,\n  IDeleteComponentDependenciesAction,\n  IReplaceComponentQueryAction,\n  IReplaceStaticQueryAction,\n  IQueryExtractedAction,\n  IQueryExtractionGraphQLErrorAction,\n  IQueryExtractedBabelSuccessAction,\n  IQueryExtractionBabelErrorAction,\n  ISetProgramStatusAction,\n  IPageQueryRunAction,\n  IRemoveStaleJobAction,\n  ISetSiteConfig,\n  IDefinitionMeta,\n  ISetGraphQLDefinitionsAction,\n  IQueryStartAction,\n  IApiFinishedAction,\n  IQueryClearDirtyQueriesListToEmitViaWebsocket,\n} from \"../types\"\n\nimport { gatsbyConfigSchema } from \"../../joi-schemas/joi\"\nimport { didYouMean } from \"../../utils/did-you-mean\"\n\n/**\n * Create a dependency between a page and data. Probably for\n * internal use only.\n * @private\n */\nexport const createPageDependency = (\n  {\n    path,\n    nodeId,\n    connection,\n  }: { path: string; nodeId?: string; connection?: string },\n  plugin = ``\n): ICreatePageDependencyAction => {\n  return {\n    type: `CREATE_COMPONENT_DEPENDENCY`,\n    plugin,\n    payload: {\n      path,\n      nodeId,\n      connection,\n    },\n  }\n}\n\n/**\n * Delete dependencies between an array of pages and data. Probably for\n * internal use only. Used when deleting pages.\n * @private\n */\nexport const deleteComponentsDependencies = (\n  paths: Array<string>\n): IDeleteComponentDependenciesAction => {\n  return {\n    type: `DELETE_COMPONENTS_DEPENDENCIES`,\n    payload: {\n      paths,\n    },\n  }\n}\n\n/**\n * When the query watcher extracts a GraphQL query, it calls\n * this to store the query with its component.\n * @private\n */\nexport const replaceComponentQuery = ({\n  query,\n  componentPath,\n}: {\n  query: string\n  componentPath: string\n}): IReplaceComponentQueryAction => {\n  return {\n    type: `REPLACE_COMPONENT_QUERY`,\n    payload: {\n      query,\n      componentPath,\n    },\n  }\n}\n\nexport const apiFinished = (\n  payload: IApiFinishedAction[\"payload\"]\n): IApiFinishedAction => {\n  return {\n    type: `API_FINISHED`,\n    payload,\n  }\n}\n\n/**\n * When the query watcher extracts a \"static\" GraphQL query from <StaticQuery>\n * components, it calls this to store the query with its component.\n * @private\n */\nexport const replaceStaticQuery = (\n  args: any,\n  plugin: IGatsbyPlugin | null | undefined = null\n): IReplaceStaticQueryAction => {\n  return {\n    type: `REPLACE_STATIC_QUERY`,\n    plugin,\n    payload: args,\n  }\n}\n\n/**\n *\n * Report that a query has been extracted from a component. Used by\n * query-compiler.js.\n * @private\n */\nexport const queryExtracted = (\n  { componentPath, query }: { componentPath: string; query: string },\n  plugin: IGatsbyPlugin,\n  traceId?: string\n): IQueryExtractedAction => {\n  return {\n    type: `QUERY_EXTRACTED`,\n    plugin,\n    traceId,\n    payload: { componentPath, query },\n  }\n}\n\n/**\n * Set Definitions for fragment extraction, etc.\n *\n * Used by developer tools such as vscode-graphql & graphiql\n *\n * query-compiler.js.\n * @private\n */\nexport const setGraphQLDefinitions = (\n  definitionsByName: Map<string, IDefinitionMeta>\n): ISetGraphQLDefinitionsAction => {\n  return {\n    type: `SET_GRAPHQL_DEFINITIONS`,\n    payload: definitionsByName,\n  }\n}\n\n/**\n *\n * Report that the Relay Compiler found a graphql error when attempting to extract a query\n * @private\n */\nexport const queryExtractionGraphQLError = (\n  { componentPath, error }: { componentPath: string; error: string },\n  plugin: IGatsbyPlugin,\n  traceId?: string\n): IQueryExtractionGraphQLErrorAction => {\n  return {\n    type: `QUERY_EXTRACTION_GRAPHQL_ERROR`,\n    plugin,\n    traceId,\n    payload: { componentPath, error },\n  }\n}\n\n/**\n *\n * Report that babel was able to extract the graphql query.\n * Indicates that the file is free of JS errors.\n * @private\n */\nexport const queryExtractedBabelSuccess = (\n  { componentPath },\n  plugin: IGatsbyPlugin,\n  traceId?: string\n): IQueryExtractedBabelSuccessAction => {\n  return {\n    type: `QUERY_EXTRACTION_BABEL_SUCCESS`,\n    plugin,\n    traceId,\n    payload: { componentPath },\n  }\n}\n\n/**\n *\n * Report that the Relay Compiler found a babel error when attempting to extract a query\n * @private\n */\nexport const queryExtractionBabelError = (\n  { componentPath, error }: { componentPath: string; error: Error },\n  plugin: IGatsbyPlugin,\n  traceId?: string\n): IQueryExtractionBabelErrorAction => {\n  return {\n    type: `QUERY_EXTRACTION_BABEL_ERROR`,\n    plugin,\n    traceId,\n    payload: { componentPath, error },\n  }\n}\n\n/**\n * Set overall program status e.g. `BOOTSTRAPING` or `BOOTSTRAP_FINISHED`.\n * @private\n */\nexport const setProgramStatus = (\n  status: ProgramStatus,\n  plugin: IGatsbyPlugin,\n  traceId?: string\n): ISetProgramStatusAction => {\n  return {\n    type: `SET_PROGRAM_STATUS`,\n    plugin,\n    traceId,\n    payload: status,\n  }\n}\n\n/**\n * Broadcast that a page's query was run.\n * @private\n */\nexport const pageQueryRun = (\n  { path, componentPath, isPage },\n  plugin: IGatsbyPlugin,\n  traceId?: string\n): IPageQueryRunAction => {\n  return {\n    type: `PAGE_QUERY_RUN`,\n    plugin,\n    traceId,\n    payload: { path, componentPath, isPage },\n  }\n}\n\nexport const queryStart = (\n  { path, componentPath, isPage },\n  plugin: IGatsbyPlugin,\n  traceId?: string\n): IQueryStartAction => {\n  return {\n    type: `QUERY_START`,\n    plugin,\n    traceId,\n    payload: { path, componentPath, isPage },\n  }\n}\n\nexport const clearDirtyQueriesListToEmitViaWebsocket = (): IQueryClearDirtyQueriesListToEmitViaWebsocket => {\n  return {\n    type: `QUERY_CLEAR_DIRTY_QUERIES_LIST_TO_EMIT_VIA_WEBSOCKET`,\n  }\n}\n\n/**\n * Remove jobs which are marked as stale (inputPath doesn't exists)\n * @private\n */\nexport const removeStaleJob = (\n  contentDigest: string,\n  plugin?: IGatsbyPlugin,\n  traceId?: string\n): IRemoveStaleJobAction => {\n  return {\n    type: `REMOVE_STALE_JOB_V2`,\n    plugin,\n    traceId,\n    payload: {\n      contentDigest,\n    },\n  }\n}\n\n/**\n * Set gatsby config\n * @private\n */\nexport const setSiteConfig = (config?: unknown): ISetSiteConfig => {\n  const result = gatsbyConfigSchema.validate(config || {})\n  const normalizedPayload: IGatsbyConfig = result.value\n\n  if (result.error) {\n    const hasUnknownKeys = result.error.details.filter(\n      details => details.type === `object.allowUnknown`\n    )\n\n    if (Array.isArray(hasUnknownKeys) && hasUnknownKeys.length) {\n      const errorMessages = hasUnknownKeys.map(unknown => {\n        const { context, message } = unknown\n        const key = context?.key\n        const suggestion = key && didYouMean(key)\n\n        if (suggestion) {\n          return `${message}. ${suggestion}`\n        }\n\n        return message\n      })\n\n      reporter.panic({\n        id: `10122`,\n        context: {\n          sourceMessage: errorMessages.join(`\\n`),\n        },\n      })\n    }\n\n    reporter.panic({\n      id: `10122`,\n      context: {\n        sourceMessage: result.error.message,\n      },\n    })\n  }\n\n  return {\n    type: `SET_SITE_CONFIG`,\n    payload: normalizedPayload,\n  }\n}\n"],"file":"internal.js"}