{
  "version": 3,
  "sources": ["../../stackbit.config.ts"],
  "sourcesContent": ["import { GitContentSource } from '@stackbit/cms-git';\nimport { defineStackbitConfig } from '@stackbit/types';\n\nexport default defineStackbitConfig({\n  stackbitVersion: '~0.6.0',\n  ssgName: 'nextjs',\n  nodeVersion: '18',\n  devCommand: 'npm run dev -- --port {PORT}',\n  contentSources: [\n    new GitContentSource({\n      rootPath: __dirname,\n      contentDirs: ['data/posts'],\n      models: [\n        {\n          name: 'post',\n          type: 'page',\n          urlPath: '/journal/{slug}',\n          filePath: 'data/posts/{slug}.md',\n          fields: [\n            {\n              name: 'title',\n              type: 'string',\n              required: true,\n              default: 'New Post',\n            },\n            {\n              name: 'slug',\n              type: 'slug',\n              required: true,\n            },\n            {\n              name: 'date',\n              type: 'date',\n              required: true,\n            },\n            {\n              name: 'template',\n              type: 'enum',\n              options: ['post', 'page'],\n              default: 'post',\n            },\n            {\n              name: 'cover',\n              type: 'image',\n              description: 'Cover image for the post',\n            },\n            {\n              name: 'videoCover',\n              type: 'string',\n              description: 'Video cover for the post',\n            },\n            {\n              name: 'thumb',\n              type: 'image',\n              description: 'Thumbnail image',\n            },\n            {\n              name: 'ogImage',\n              type: 'image',\n              description: 'Open Graph image for social sharing',\n            },\n            {\n              name: 'refer',\n              type: 'text',\n              description: 'Reference text or footnotes',\n            },\n            {\n              name: 'tags',\n              type: 'list',\n              items: { type: 'string' },\n              default: [],\n            },\n            {\n              name: 'hidden',\n              type: 'boolean',\n              default: false,\n              description: 'Hide post from public listing',\n            },\n            {\n              name: 'description',\n              type: 'text',\n              description: 'Post description/excerpt',\n            },\n          ],\n        },\n      ],\n      assetsConfig: {\n        referenceType: 'static',\n        staticDir: 'public',\n        uploadDir: 'journal-images/images',\n        publicPath: '/',\n      },\n    }),\n  ],\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAiC;AACjC,mBAAqC;AAErC,IAAO,8BAAQ,mCAAqB;AAAA,EAClC,iBAAiB;AAAA,EACjB,SAAS;AAAA,EACT,aAAa;AAAA,EACb,YAAY;AAAA,EACZ,gBAAgB;AAAA,IACd,IAAI,gCAAiB;AAAA,MACnB,UAAU;AAAA,MACV,aAAa,CAAC,YAAY;AAAA,MAC1B,QAAQ;AAAA,QACN;AAAA,UACE,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,UACT,UAAU;AAAA,UACV,QAAQ;AAAA,YACN;AAAA,cACE,MAAM;AAAA,cACN,MAAM;AAAA,cACN,UAAU;AAAA,cACV,SAAS;AAAA,YACX;AAAA,YACA;AAAA,cACE,MAAM;AAAA,cACN,MAAM;AAAA,cACN,UAAU;AAAA,YACZ;AAAA,YACA;AAAA,cACE,MAAM;AAAA,cACN,MAAM;AAAA,cACN,UAAU;AAAA,YACZ;AAAA,YACA;AAAA,cACE,MAAM;AAAA,cACN,MAAM;AAAA,cACN,SAAS,CAAC,QAAQ,MAAM;AAAA,cACxB,SAAS;AAAA,YACX;AAAA,YACA;AAAA,cACE,MAAM;AAAA,cACN,MAAM;AAAA,cACN,aAAa;AAAA,YACf;AAAA,YACA;AAAA,cACE,MAAM;AAAA,cACN,MAAM;AAAA,cACN,aAAa;AAAA,YACf;AAAA,YACA;AAAA,cACE,MAAM;AAAA,cACN,MAAM;AAAA,cACN,aAAa;AAAA,YACf;AAAA,YACA;AAAA,cACE,MAAM;AAAA,cACN,MAAM;AAAA,cACN,aAAa;AAAA,YACf;AAAA,YACA;AAAA,cACE,MAAM;AAAA,cACN,MAAM;AAAA,cACN,aAAa;AAAA,YACf;AAAA,YACA;AAAA,cACE,MAAM;AAAA,cACN,MAAM;AAAA,cACN,OAAO,EAAE,MAAM,SAAS;AAAA,cACxB,SAAS,CAAC;AAAA,YACZ;AAAA,YACA;AAAA,cACE,MAAM;AAAA,cACN,MAAM;AAAA,cACN,SAAS;AAAA,cACT,aAAa;AAAA,YACf;AAAA,YACA;AAAA,cACE,MAAM;AAAA,cACN,MAAM;AAAA,cACN,aAAa;AAAA,YACf;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,MACA,cAAc;AAAA,QACZ,eAAe;AAAA,QACf,WAAW;AAAA,QACX,WAAW;AAAA,QACX,YAAY;AAAA,MACd;AAAA,IACF,CAAC;AAAA,EACH;AACF,CAAC;",
  "names": []
}
